install.packages("KernSmooth")
library(KernSmooth)
setwd("~/")
getwd()
source("cachevector.R")
submit()
makeVector(c(1,2,3,4))
x <- makeVector(c(1,2,3,4))
cachemean(x)
x$getmean()
x$set()
x$get()
x$setmean()
x$set(x)
x
x
mean(x)
x$getmean()
x <- makeVector(c(1,2,3,4))
x$get()
x$getmean()
cachemean(x)
x$getmean()
cachemean(x)
z <- makevector
z <- makeVector()
z$set(c(5,6,7,8))
z$get()
z$getmean()
cachemean(z)
z$getmean()
cachemean(z)
source("cachematrix.R")
setwd("~/datasciencecoursera/ProgrammingAssignment2")
source("cachematrix.R")
m <- as.matrix(1:9)
m
m <- as.matrix(1:9,3,3)
m
m <- as.matrix(1:9,nrow = 3, ncol = 3)
m
m <- matrix(1:9,nrow = 3, ncol = 3)
m
solve(m)
m <- matrix(rep(1),nrow = 3, ncol = 3)
m
solve(m)
m <- matrix(c(1,2,3,0,4,5,0,0,6),nrow = 3, ncol = 3)
m
solve(m)
n<- solve(m)
n*m
x <- makeCacheMatrix
x$set(m)
source("cachematrix.R")
x <- makeCacheMatrix
x
x <- makeCacheMatrix()
x
x$set(m)
x$get()
x$getinverse()
cacheSolve(x)
x$getinverse()
source("cachematrix.R")
m <- matrix(c(1,2,3,0,4,5,0,0,6),nrow = 3, ncol = 3)
x$getinverse()
m <- matrix(c(10,2,3,0,40,5,0,0,60),nrow = 3, ncol = 3)
x$getinverse()
x$set(m)
x$getinverse()
cacheSolve(x)
x$getinverse()
?solve
